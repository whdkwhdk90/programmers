[프로그래머스]

<문제> (https://school.programmers.co.kr/learn/courses/30/lessons/118666)

성격 유형 검사하기

choices[i] 의 크기에 따라 문자 앞부분인지 뒷부분인지 선택 후 해당되는 문자를 map에 추가.
Map에서 중요한 건 get으로 value를 가져올 때 타입이 Object타입이다.

int : 자료형(primitive type)
산술 연산 가능함
null로 초기화 불가

Integer : 래퍼 클래스 (Wrapper class)
Unboxing하지 않을 시 산술 연산 불가능함
null값 처리 가능

boxing : primitive type -> wrapper class 변환 ( int to Integer )
unboxing : wrapper class -> primitive type 변환 ( Integer to int )

import java.util.*;

class Solution {
    public String solution(String[] survey, int[] choices) {
        String answer = "";
        String str = "";
        Map<String, Integer> hsMap = new HashMap<>();
        for (int i=0; i < survey.length; i++) {
            if (choices[i] > 4) {
                str = survey[i].substring(1,2);
            } else if (choices[i] < 4) {
                str = survey[i].substring(0,1);
            } else {
                continue;
            }
            
            if (hsMap.containsKey(str)) {
                hsMap.put(str, ans(str, hsMap) + Math.abs(4 - choices[i]));
            } else {
                hsMap.put(str, Math.abs(4 - choices[i]));
            }
        }
        answer += ans("R", hsMap) >= ans("T", hsMap) ? "R" : "T";
        answer += ans("C", hsMap) >= ans("F", hsMap) ? "C" : "F";
        answer += ans("J", hsMap) >= ans("M", hsMap) ? "J" : "M";
        answer += ans("A", hsMap) >= ans("N", hsMap) ? "A" : "N";
        return answer;
    }

    public static Integer ans(String str, Map<String, Integer> hsMap){
        if (hsMap.containsKey(str)) {
            return Integer.parseInt(hsMap.get(str).toString());
        } else {
            return 0;
        }
    }
}